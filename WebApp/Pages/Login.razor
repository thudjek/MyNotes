@page "/login"
@layout NotAuthorizedLayout
@using SharedModels.Requests.Auth
@using SharedModels.Responses.Auth
@using Microsoft.AspNetCore.WebUtilities
@using WebApp.Common.Exceptions
@inject PopupMessageService _popupMessageService
@inject ILocalStorageService _localStorage
@inject AuthenticationStateProvider _authStateProvider
@inject NavigationManager _navigationManager
@inject ApiService _apiService

<EditForm Model="@loginRequest" OnSubmit="SubmitLogin">
    <CustomValidator @ref="customValidator" />
    <div class="row">
        <div class="col-8 offset-2 col-md-6 offset-md-3 col-lg-5 offset-lg-3point5 col-xl-4 offset-xl-4 mb-3 text-start">
            <InputText class="form-control input" placeholder="Email" @bind-Value=loginRequest.Email />
            <ValidationMessage For="() => loginRequest.Email" />
        </div>
    </div>
    <div class="row">
            <div class="col-8 offset-2 col-md-6 offset-md-3 col-lg-5 offset-lg-3point5 col-xl-4 offset-xl-4 mb-3 text-start">
            <InputText class="form-control input" placeholder="Password" type="password" @bind-Value=loginRequest.Password />
            <ValidationMessage For="() => loginRequest.Password" />
        </div>
    </div>
    <div class="row">
        <div class="col-8 offset-2 col-md-6 offset-md-3 col-lg-5 offset-lg-3point5 col-xl-4 offset-xl-4 mb-3">
            <button class="btn btn-primary w-100" type="submit">Log in</button>
        </div>
    </div>
</EditForm>
<div class="row">
    <div class="col-8 offset-2 col-md-6 offset-md-3 col-lg-5 offset-lg-3point5 col-xl-4 offset-xl-4 mb-3 text-center">
        <a class="link" href="forgot-password">Forgot your password?</a>
    </div>
    <div class="col-8 offset-2 col-md-6 offset-md-3 col-lg-5 offset-lg-3point5 col-xl-4 offset-xl-4 mb-3">
        <div class="separator">Or</div>
    </div>
    <div class="col-8 offset-2 col-md-6 offset-md-3 col-lg-5 offset-lg-3point5 col-xl-4 offset-xl-4 mb-3">
        <button class='btn google-login-btn' @onclick='() => ExternalLogin("Google")'>
            <img src='https://developers.google.com/identity/images/g-logo.png'>
            <span>Log in with Google</span>
        </button>
    </div>
    <div class="col-8 offset-2 col-md-6 offset-md-3 col-lg-5 offset-lg-3point5 col-xl-4 offset-xl-4 mb-3">
        <br />
        <p>Don't have an account? <a class="link" href="sign-up">Sign up</a></p>
    </div>
</div>
@code {
    private LoginRequest loginRequest = new ();
    private CustomValidator customValidator;

    private async Task SubmitLogin()
    {
        try
        {
            var tokenResponse = await _apiService.Post<LoginRequest, TokenResponse>("auth/login", loginRequest);
            await _localStorage.SetItemAsync("accessToken", tokenResponse.AccessToken);
            ((AuthStateProvider)_authStateProvider).NotifyUserAuthentication(tokenResponse.AccessToken);
            _navigationManager.NavigateTo("/");
        }
        catch (ValidationException ex)
        {
            customValidator.ClearErrors();
            customValidator.DisplayErrors(ex.ErrorsGrouped);
        }
        catch (ApplicationException ex)
        {
            _popupMessageService.ShowPopup(ex.Message, PopupMessageType.Error);
        }
    }

    private void ExternalLogin(string provider)
    {
        _navigationManager.NavigateTo($"{_apiService.GetBaseAddress()}auth/external-login/{provider}");
    }
}