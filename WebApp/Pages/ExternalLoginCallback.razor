@page "/external-login-callback"
@using SharedModels.Requests.Auth
@using Microsoft.AspNetCore.WebUtilities
@using SharedModels.Responses.Auth
@inject ILocalStorageService _localStorage
@inject AuthenticationStateProvider _authStateProvider
@inject NavigationManager _navigationManager
@inject ApiService _apiService

@code {
    ExternalLoginTokensRequest externalLoginTokensRequest = new();

    protected override async Task OnInitializedAsync()
    {
        MapQueryStringValuesToRequest();
        await PostRequest();
        _navigationManager.NavigateTo("/");
    }

    private void MapQueryStringValuesToRequest()
    {
        var uri = _navigationManager.ToAbsoluteUri(_navigationManager.Uri);
        var queryString = uri.Query.EncodePlusSign();
        if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("email", out var email))
        {
            externalLoginTokensRequest.Email = email;
        }

        if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("provider", out var provider))
        {
            externalLoginTokensRequest.Provider = provider;
        }
    }

    private async Task PostRequest()
    {
        try
        {
            var tokenResponse = await _apiService.Post<ExternalLoginTokensRequest, TokenResponse>("auth/external-login-tokens", externalLoginTokensRequest);
            await _localStorage.SetItemAsync("accessToken", tokenResponse.AccessToken);
            ((AuthStateProvider)_authStateProvider).NotifyUserAuthentication(tokenResponse.AccessToken);
        }
        catch
        {
            _navigationManager.NavigateTo("login");
        }
    }
}