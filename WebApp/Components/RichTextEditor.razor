@using SharedModels.Requests.Notes;
@using SharedModels.Responses.Notes;

@if (ActiveNote != null)
{
    <TextInput @ref="title" IsDisabled="@ActiveNote.IsDeleted" Class="title" Placeholder="Title" />
    <RichTextEdit @ref="richTextEdit" Theme="RichTextEditTheme.Snow" SubmitOnEnter="false" ToolbarPosition="Placement.Top" ReadOnly="@ActiveNote.IsDeleted">
        <Toolbar>
            <RichTextEditToolbarGroup>
                <RichTextEditToolbarButton Action="RichTextEditAction.Bold" />
                <RichTextEditToolbarButton Action="RichTextEditAction.Italic" />
                <RichTextEditToolbarButton Action="RichTextEditAction.Underline" />
                <RichTextEditToolbarButton Action="RichTextEditAction.Strike" />
                <RichTextEditToolbarSelect Action="RichTextEditAction.Color" />
                <RichTextEditToolbarButton Action="RichTextEditAction.List" Value="ordered" />
                <RichTextEditToolbarButton Action="RichTextEditAction.List" Value="bullet" />
                <RichTextEditToolbarButton Action="RichTextEditAction.Link" />
            </RichTextEditToolbarGroup>
        </Toolbar>
    </RichTextEdit>
}

@code {
    RichTextEdit richTextEdit;
    TextInput title;
    int noteId;

    [CascadingParameter]
    public NoteResponse ActiveNote { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (ActiveNote != null)
        {
            if (noteId != ActiveNote.Id)
            {
                title.SetValue(ActiveNote.Title);
            }

            noteId = ActiveNote.Id;
            await richTextEdit.SetHtmlAsync(ActiveNote.Content);
        }
        else
        {
            noteId = 0;
        }
    }

    public async Task<UpdateNoteRequest> GetUpdateNoteRequest()
    {
        var content = await richTextEdit.GetHtmlAsync();
        await richTextEdit.SetHtmlAsync(content);
        var text = await richTextEdit.GetTextAsync();

        return new UpdateNoteRequest()
        {
            Id = ActiveNote.Id,
            Title = title.Value,
            Content = content,
            Text = text
        };
    }
}