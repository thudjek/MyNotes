@inject IJSRuntime _jsRuntime;

<div class="modal fade" id="modal" tabindex="-1" aria-labelledby="modalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalLabel">@title</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                @body
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">@closeBtnText</button>
                <button type="button" class="btn btn-primary">@acceptBtnText</button>
            </div>
        </div>
    </div>
</div>

@code {
    string title = "Title";
    string body = "Body";
    string closeBtnText = "Close";
    string acceptBtnText = "Save";

    public void SetModalContent(string title, string body, string closeBtnText, string acceptBtnText)
    {
        this.title = title;
        this.body = body;
        this.closeBtnText = closeBtnText;
        this.acceptBtnText = acceptBtnText;
        StateHasChanged();
    }

    public async Task Show()
    {
        await _jsRuntime.InvokeVoidAsync("ShowModal");
    }
}